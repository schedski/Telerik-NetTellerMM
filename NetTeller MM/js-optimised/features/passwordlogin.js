define(["lib/jquery","netteller/session","lib/knockout","netteller/login","netteller/security","config/environment","netteller/localstorage","lib/toolkit","ui/startup"],function(e,t,n,r,i,s,o,u){var a,f={customerNumber:n.observable("").extend({required:{params:!0,message:s.strings["msg.required"]}}),password:n.observable("").extend({required:{params:!0,message:s.strings["msg.required"]}}),pageMessage:n.observable(""),loginClick:function(){if(f.errors().length>0){f.errors.showAllMessages();return}r.loginLoader.reset(),r.loginLoader.show(),r.doLoginWorkFlowStep(f.customerNumber(),f.password(),r.requestCommand.StartLoginProcess,a)},reset:function(){f.customerNumber(""),f.password(""),f.pageMessage(""),f.errors.showAllMessages(!1)}};t.viewModels.push(f),f.errors=n.validation.group(f),n.applyBindings(f,e("#loginPassword").get(0)),a=function(t,n,l){var c=function(){t?l.State===r.responseCommand.MustAcceptTermsAndConditions?(r.setTermsAndConditions(l),e.mobile.changePage("#loginTerms")):l.State===r.responseCommand.AcceptLogin?r.doAcceptLoginWorkFlowStep(a):l.State===r.responseCommand.LoginProcessAccepted?(i.isLoggedIn=!0,i.isTokenOwner(l.IsTokenOwner),r.doLoginProcessAcceptedStep(l.HasPinCodeRegistered)):l.State==r.responseCommand.ForcePasswordChange&&(o.deregisterPin(),i.isTokenOwner(!1),e.mobile.changePage("#passwordChange")):l.IsLockedOut?u.displayPageMessage(f,"pageMessage",s.strings["msg.accountlocked"],e("#passwordLoginMessagePopup")):(f.reset(),u.displayPageMessage(f,"pageMessage",n,e("#passwordLoginMessagePopup")),i.isLoggedIn=!1)};r.loginLoader.loadFinished(c)},e("#loginPassword").on("pagehide",function(){f.reset()}),e("#loginPassword").on("pageshow",function(){r.loginMode(r.loginModeEnum.Password),o.hasPin()&&!i.isTokenVerified()&&(u.displayPageMessage(f,"pageMessage",s.strings["msg.tokennotverified"],e("#passwordLoginMessagePopup")),o.deregisterPin())})})