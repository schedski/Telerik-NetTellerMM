define(["lib/jquery","ui/loader","netteller/transactions","netteller/session","lib/knockout","lib/accounting","config/client","ui/accountHelper","config/environment","lib/underscore","lib/datejs","ui/startup"],function(e,t,n,r,i,s,o,u,a,f){var l=new t.TimedLoader(a.strings["loader.transactions"]),c=function(e){e&&(p.ShowContent(!1),p.transactionsList.removeAll()),n.getTransactions(n.selectedAccountNumber,p.CurrentPageNumber,d)},h=function(e){var t=this;this.CreatedDate=i.observable(Date.parse(e.CreatedDate)),this.SortableDate=i.computed(function(){return t.CreatedDate().toString("yyyy-MM-dd")}),this.DisplayDate=i.computed(function(){return t.CreatedDate().toString(o.transactionsDefaultDateFormat)}),this.ReferenceLines=i.observable(e.ReferenceLines),this.Amount=i.observable(Number(e.Amount)),this.DisplayAmount=i.computed(function(){return s.formatMoney(t.Amount(),{format:{pos:"%s%v",neg:"-%s%v",zero:"%s  0.00"}})}),this.IsAmountNegative=i.computed(function(){return t.Amount()<0})},p={AccountName:i.observable(""),BSB:i.observable(""),AccountNumber:i.observable(""),AccountType:i.observable(0),DisplayCurrentBalance:i.observable(""),DisplayAvailableBalance:i.observable(""),transactionsList:i.observableArray([]),AccountHasTransactions:i.observable(!0),ErrorMessage:i.observable(""),HasError:i.observable(!1),GroupedTransactionList:i.computed({read:function(){var e=f.groupBy(p.transactionsList(),function(e){return e.SortableDate()}),t=f.reduce(e,function(e,t){return e.push({SortableDate:f.first(t).SortableDate(),Date:f.first(t).DisplayDate(),Transactions:t}),e},[]);return f.sortBy(t,function(e){return e.SortableDate}).reverse()},deferEvaluation:!0}),AccountTypeImage:i.computed({read:function(){return u.getAccountTypeImageSrc(p.AccountType())},deferEvaluation:!0}),CurrentPageNumber:i.observable(0),TotalPages:i.observable(0),ShowContent:i.observable(!1),Reset:function(){p.AccountName(""),p.BSB(""),p.AccountNumber(""),p.AccountType(0),p.transactionsList([]),p.HasError(!1),p.ErrorMessage("")},MoreTransactionsAvailable:i.computed({read:function(){return p.CurrentPageNumber()<p.TotalPages()},deferEvaluation:!0}),ShowMoreTransactions:function(){l.reset(),l.show(),p.CurrentPageNumber(p.CurrentPageNumber()+1),c(!1)},ShowError:function(t){p.HasError(!0),p.ErrorMessage(t),e.mobile.silentScroll(0)},DisplayAccountDetails:function(e){p.AccountName(e.Account.DisplayAccountName),p.BSB(e.Account.BSBWithDash),p.AccountNumber(e.Account.DisplayAccountNumber),p.DisplayCurrentBalance(s.formatMoney(e.Account.CurrentBalance)),p.DisplayAvailableBalance(s.formatMoney(e.Account.AvailableBalance)),p.AccountType(e.Account.AccountType)}};r.viewModels.push(p);var d=function(t){var n=function(){t.Success?(p.DisplayAccountDetails(t),e.each(t.Transactions,function(e,t){p.transactionsList.push(new h(t))}),p.TotalPages(t.TotalPages),p.ShowContent(!0),p.AccountHasTransactions(t.Transactions.length>0)):p.ShowError(t.ErrorMessage)};t.Transactions===undefined||t.Transactions.length===0?(t.Success?(p.ShowContent(!0),p.AccountHasTransactions(!1),p.DisplayAccountDetails(t)):p.ShowError(t.ErrorMessage),l.loadFinished()):l.loadFinished(n)};e("#transactions").on("pageinit",function(){i.applyBindings(p,e("#transactions").get(0)),p.ShowContent(!1)}),e("#transactions").on("pagebeforeshow",function(){p.CurrentPageNumber(1),c(!0)}),e("#transactions").on("pageshow",function(){l.show()})})